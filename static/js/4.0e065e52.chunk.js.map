{"version":3,"sources":["component/MovieDetailsPage/MovieDetailsPage.module.css","component/AdditionalInformation/AdditionalInformation.module.css","component/Cast/Cast.js","component/Reviews/Reviews.js","component/AdditionalInformation/AdditionalInformation.js","component/MovieDetailsPage/MovieDetailsPage.js"],"names":["module","exports","Cast","movieId","useState","casts","setCast","useEffect","fetch","then","response","json","cast","map","src","profile_path","alt","name","character","id","Reviews","reviews","setReviews","results","length","result","author","content","AdditionalInformation","className","s","conteiner","to","MovieDetailsPage","useParams","movie","setMovie","location","useLocation","state","from","block","conteinerPage","poster_path","original_title","conteinerInfo","popularity","overview","list","genres","genre","item","path","element"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,UAAY,oCAAoC,cAAgB,wCAAwC,cAAgB,wCAAwC,KAAO,+BAA+B,KAAO,+BAA+B,MAAQ,kC,mBCAtQD,EAAOC,QAAU,CAAC,UAAY,2C,+ICGf,SAASC,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAC7B,EAAyBC,mBAAS,MAAlC,mBAAOC,EAAP,KAAcC,EAAd,KAUA,OARAC,qBAAU,WACRC,MAAM,sCAAD,OACmCL,EADnC,qEAGFM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAIJ,EAAQI,QAC3B,CAACP,IAGF,8BACE,6BACGE,GACCA,EAAMO,KAAKC,KAAI,SAAAD,GAAI,OACjB,+BACE,qBAAKE,IAAG,UAlBP,mCAkBO,OAAcF,EAAKG,cAAgBC,IAAKJ,EAAKK,OACrD,6BAAKL,EAAKK,OACV,4BAAIL,EAAKM,cAHFN,EAAKO,WChBX,SAASC,EAAT,GAA+B,IAAZjB,EAAW,EAAXA,QAChC,EAA8BC,mBAAS,IAAvC,mBAAOiB,EAAP,KAAgBC,EAAhB,KAQA,OAPAf,qBAAU,WACRC,MAAM,sCAAD,OACmCL,EADnC,4EAGFM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAIY,EAAWZ,EAASa,cACvC,CAACpB,IAEF,gCACsB,IAAnBkB,EAAQG,QAAgB,yEACxBH,GACC,6BACGA,EAAQR,KAAI,SAAAY,GAAM,OACjB,+BACE,yCAAYA,EAAOC,UACnB,4BAAID,EAAOE,YAFJF,EAAON,Y,qBCjBb,SAASS,EAAT,GAA4C,EAAXzB,QAE9C,OACE,qCACE,wDACA,qBAAI0B,UAAWC,IAAEC,UAAjB,UACE,6BACE,cAAC,IAAD,CAASC,GAAG,OAAZ,oBAEF,6BACE,cAAC,IAAD,CAASA,GAAG,UAAZ,6BCFK,SAASC,IAAoB,IAAD,IACjC9B,EAAY+B,cAAZ/B,QACR,EAA0BC,mBAAS,MAAnC,mBAAO+B,EAAP,KAAcC,EAAd,KACMC,EAAWC,cASjB,OARA/B,qBAAU,WACRC,MAAM,sCAAD,OACmCL,EADnC,6DAGFM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAI0B,EAAS1B,QAC5B,CAACP,IAGF,sBAAK0B,UAAWC,IAAEC,UAAlB,UACE,cAAC,IAAD,CAAMC,GAAE,iBAAEK,QAAF,IAAEA,GAAF,UAAEA,EAAUE,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,UAAWD,MAAK,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAUE,MAA/D,oBAGA,qBAAKV,UAAWC,IAAEW,MAAlB,SACGN,GACC,qCACE,sBAAKN,UAAWC,IAAEY,cAAlB,UACE,8BACE,qBACE5B,IAAG,UAzBN,mCAyBM,OAAcqB,EAAMQ,aACvB3B,IAAKmB,EAAMS,mBAGf,sBAAKf,UAAWC,IAAEe,cAAlB,UACE,6BAAKV,EAAMS,iBACX,6CAAgBT,EAAMW,cACtB,0CACA,4BAAIX,EAAMY,WACV,wCACA,oBAAIlB,UAAWC,IAAEkB,KAAjB,SACGb,EAAMc,OAAOpC,KAAI,SAAAqC,GAAK,OACrB,oBAAmBrB,UAAWC,IAAEqB,KAAhC,SACGD,EAAMjC,MADAiC,EAAM/B,eAQvB,gCACE,cAACS,EAAD,CAAuBzB,QAASA,IAChC,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiD,KAAK,OAAOC,QAAS,cAACnD,EAAD,CAAMC,QAASA,MAC3C,cAAC,IAAD,CAAOiD,KAAK,UAAUC,QAAS,cAACjC,EAAD,CAASjB,QAASA","file":"static/js/4.0e065e52.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"MovieDetailsPage_conteiner__ilRGQ\",\"conteinerPage\":\"MovieDetailsPage_conteinerPage__1pbdg\",\"conteinerInfo\":\"MovieDetailsPage_conteinerInfo__F7q3U\",\"list\":\"MovieDetailsPage_list__PDVH2\",\"item\":\"MovieDetailsPage_item__1X9TS\",\"block\":\"MovieDetailsPage_block__2Nyzb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"AdditionalInformation_conteiner__1sShs\"};","import { useState } from 'react';\r\n\r\nimport { useEffect } from 'react/cjs/react.development';\r\nconst ImgUrl = 'https://image.tmdb.org/t/p/w200';\r\nexport default function Cast({ movieId }) {\r\n  const [casts, setCast] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=5ac3759582a29f2bcb8e74a1f0ca5fb0&language=en-US`,\r\n    )\r\n      .then(response => response.json())\r\n      .then(response => setCast(response));\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {casts &&\r\n          casts.cast.map(cast => (\r\n            <li key={cast.id}>\r\n              <img src={`${ImgUrl}${cast.profile_path}`} alt={cast.name} />\r\n              <h3>{cast.name}</h3>\r\n              <p>{cast.character}</p>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n\r\nimport { useEffect } from 'react/cjs/react.development';\r\n\r\nexport default function Reviews({ movieId }) {\r\n  const [reviews, setReviews] = useState([]);\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=5ac3759582a29f2bcb8e74a1f0ca5fb0&language=en-US&page=1`,\r\n    )\r\n      .then(response => response.json())\r\n      .then(response => setReviews(response.results));\r\n  }, [movieId]);\r\n  return (\r\n    <div>\r\n      {reviews.length === 0 && <p>We don't have any reviews for this movie</p>}\r\n      {reviews && (\r\n        <ul>\r\n          {reviews.map(result => (\r\n            <li key={result.id}>\r\n              <h3>Autor: {result.author}</h3>\r\n              <p>{result.content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './AdditionalInformation.module.css';\r\nexport default function AdditionalInformation({ movieId }) {\r\n  //   const { movieId } = useParams();\r\n  return (\r\n    <>\r\n      <h3>Additional information</h3>\r\n      <ul className={s.conteiner}>\r\n        <li>\r\n          <NavLink to=\"cast\">Cast</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"reviews\">Reviews</NavLink>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport s from './MovieDetailsPage.module.css';\r\n\r\nimport { useParams, Route, Routes, Link, useLocation } from 'react-router-dom';\r\nimport { useEffect } from 'react/cjs/react.development';\r\nimport Cast from '../Cast/Cast';\r\nimport Reviews from '../Reviews/Reviews';\r\nimport AdditionalInformation from '../AdditionalInformation/AdditionalInformation';\r\nconst ImgUrl = 'https://image.tmdb.org/t/p/w300';\r\n\r\nexport default function MovieDetailsPage() {\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=5ac3759582a29f2bcb8e74a1f0ca5fb0&language=en-US`,\r\n    )\r\n      .then(response => response.json())\r\n      .then(response => setMovie(response));\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div className={s.conteiner}>\r\n      <Link to={location?.state?.from ?? '/movies'} state={location?.state}>\r\n        &lt; Back\r\n      </Link>\r\n      <div className={s.block}>\r\n        {movie && (\r\n          <>\r\n            <div className={s.conteinerPage}>\r\n              <div>\r\n                <img\r\n                  src={`${ImgUrl}${movie.poster_path}`}\r\n                  alt={movie.original_title}\r\n                />\r\n              </div>\r\n              <div className={s.conteinerInfo}>\r\n                <h2>{movie.original_title}</h2>\r\n                <p>User Score: {movie.popularity}</p>\r\n                <h3>Overview</h3>\r\n                <p>{movie.overview}</p>\r\n                <h3>Genres</h3>\r\n                <ul className={s.list}>\r\n                  {movie.genres.map(genre => (\r\n                    <li key={genre.id} className={s.item}>\r\n                      {genre.name}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <AdditionalInformation movieId={movieId} />\r\n              <Routes>\r\n                <Route path=\"cast\" element={<Cast movieId={movieId} />} />\r\n                <Route path=\"reviews\" element={<Reviews movieId={movieId} />} />\r\n              </Routes>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}