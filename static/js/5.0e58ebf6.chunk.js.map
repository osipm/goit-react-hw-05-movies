{"version":3,"sources":["component/MoviesPage/MoviePage.module.css","component/MoviesPage/MoviesPage.js"],"names":["module","exports","MoviesPage","from","useLocation","useState","searchMovie","setSearchMovie","arrayMovie","setArrayMovie","prevSearchMovie","setPrevSearchMovie","request","search","fetch","then","response","json","results","useEffect","state","className","s","conteiner","onSubmit","event","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","map","name","to","id","title"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,UAAY,+B,uICGf,SAASC,IACtB,IAAMC,EAAOC,cACb,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA8CJ,mBAAS,IAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KAMMC,EAAU,SAAAC,GAAM,OACpBC,MAAM,2GAAD,OACwGD,EADxG,gCAGFE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACJP,EAAcO,EAASE,aAqB7B,OANAC,qBAAU,WAAO,IAAD,EACmB,GAAjC,UAAIhB,EAAKiB,aAAT,aAAI,EAAYV,kBACdE,EAAO,UAACT,EAAKiB,aAAN,aAAC,EAAYV,mBAErB,IAGD,sBAAKW,UAAWC,IAAEC,UAAlB,UACE,uBAAMC,SApBW,SAAAC,GAAU,IAAD,EAE5B,GADK,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOC,sBAAP,cAAAD,GAC2B,KAAvBnB,EAAYqB,OACd,OAAOC,MAAM,8HAEfjB,EAAmBL,GAEnBM,EAAQN,GAERC,EAAe,KAWb,UACE,uBACEsB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,MAAO3B,EACP4B,SAxCiB,SAAAT,GACvBlB,EAAekB,EAAMU,cAAcF,MAAMG,kBA0CrC,wBAAQP,KAAK,SAAb,SACE,+CAIJ,6BACGrB,EAAW6B,KAAI,SAAAC,GAAI,OAClB,6BACE,eAAC,IAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMpB,MAAO,CAAEjB,OAAMO,mBAA/C,UACG4B,EAAKG,MAAO,QAFRH,EAAKE","file":"static/js/5.0e58ebf6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"MoviePage_conteiner__3U89H\"};","import { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport s from './MoviePage.module.css';\nexport default function MoviesPage() {\n  const from = useLocation();\n  const [searchMovie, setSearchMovie] = useState('');\n  const [arrayMovie, setArrayMovie] = useState([]);\n  const [prevSearchMovie, setPrevSearchMovie] = useState('');\n\n  const handleNameChange = event => {\n    setSearchMovie(event.currentTarget.value.toLowerCase());\n  };\n\n  const request = search =>\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=5ac3759582a29f2bcb8e74a1f0ca5fb0&language=en-US&query=${search}&page=1&include_adult=false`,\n    )\n      .then(response => response.json())\n      .then(response => {\n        setArrayMovie(response.results);\n      });\n\n  const handleSubmit = event => {\n    event?.preventDefault?.();\n    if (searchMovie.trim() === '') {\n      return alert('Введіть назву картинки');\n    }\n    setPrevSearchMovie(searchMovie);\n\n    request(searchMovie);\n\n    setSearchMovie('');\n  };\n\n  useEffect(() => {\n    if (from.state?.prevSearchMovie) {\n      request(from.state?.prevSearchMovie);\n    }\n  }, []);\n\n  return (\n    <div className={s.conteiner}>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={searchMovie}\n          onChange={handleNameChange}\n        />\n\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n\n      <ul>\n        {arrayMovie.map(name => (\n          <li key={name.id}>\n            <Link to={`/movies/${name.id}`} state={{ from, prevSearchMovie }}>\n              {name.title}{' '}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"sourceRoot":""}